AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Mappings:
  environmentSpecificValues:
    'MOCK-ACCOUNT-ID':
      environmentName: prod
#      meetBelRecoveredTestTableName: 'meetBelTestTable' Original table with ruined data
      meetBelRecoveredTestTableName: 'meetBelTestTable-recovered'

Resources:

  meetBelTestTable:
    Type: AWS::DynamoDB::Table
    DeletionPolicy: Retain
    Properties:
      TableName: meetBelTestTable-recovered
      AttributeDefinitions:
        - AttributeName: PK
          AttributeType: S
        - AttributeName: SK
          AttributeType: S
      KeySchema:
        - AttributeName: PK
          KeyType: HASH
        - AttributeName: SK
          KeyType: RANGE
      BillingMode: PAY_PER_REQUEST
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      Tags:
        - Key: CostCentre
          Value: meetBelPreProdTesting

  # Cakes HTTP API:

  cakesAPI:
    Type: AWS::Serverless::Api
    Properties:
      StageName: dev
      Cors:
        AllowHeaders: "'Authorization, content-type'"
        AllowOrigin: "'*'"
      Auth:
        AddDefaultAuthorizerToCorsPreflight: false # removes auth requirement from 'options' pre-flight requests

  getCakesFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: ./build/get_cakes.getCakesRestHandler
      Runtime: nodejs10.x
      CodeUri: ./service/
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !FindInMap [environmentSpecificValues, 'MOCK-ACCOUNT-ID', meetBelRecoveredTestTableName]
      Description: >-
        Get Cakes
      MemorySize: 128
      Timeout: 10
      ReservedConcurrentExecutions: 10
      Environment:
        Variables:
          NODE_ENV: dev
          MEETBEL_TEST_TABLE_NAME: !FindInMap [environmentSpecificValues, 'MOCK-ACCOUNT-ID', meetBelRecoveredTestTableName]
      Events:
        Api1:
          Type: Api
          Properties:
            RestApiId: !Ref cakesAPI
            Path: /
            Method: get

  # Back Up Config:

  databaseBackupsPlan:
    Type: AWS::Backup::BackupPlan
    Properties:
      BackupPlan:
        BackupPlanName: cakeDatabaseBackups
        BackupPlanRule:
          - Lifecycle:
              DeleteAfterDays: 35
            RuleName: daliyBackup
            # Daily at 5am Cron
            ScheduleExpression: "cron(0 5 * * ? *)"
            TargetBackupVault: Default

  cakeTablesBackUpSelection:
    Type: AWS::Backup::BackupSelection
    Properties:
      BackupPlanId: !Ref databaseBackupsPlan
      BackupSelection:
        IamRoleArn: !GetAtt backUpSystemExecutionRole.Arn
        Resources:
            - !GetAtt meetBelTestTable.Arn
        SelectionName: dynamoDBTables

  backUpSystemExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
            - Effect: Allow
              Principal:
                Service:
                  - backup.amazonaws.com
              Action:
                - 'sts:AssumeRole'
      Description: Role used by aws backup to backup
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSBackupServiceRolePolicyForBackup
      # Role Names should be region pre-fixed. Or the world explodes!
      RoleName: !Join [ "-", [ !Ref "AWS::Region", "backUpSystemExecutionRole" ] ]
